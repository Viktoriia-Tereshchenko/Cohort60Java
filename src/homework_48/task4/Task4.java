package homework_48.task4;

/*
Task 4 –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ
–ü—Ä–∞–∫—Ç–∏–∫—É–µ–º groupingBy
–ï—Å—Ç—å –∫–ª–∞—Å—Å Student, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞.
–°–æ–∑–¥–∞–π —Å–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ (List) ‚Äî –º–∏–Ω–∏–º—É–º 10 –æ–±—ä–µ–∫—Ç–æ–≤, —Å —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏.

–ó–∞–¥–∞–Ω–∏—è:
1)–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
–°–≥—Ä—É–ø–ø–∏—Ä—É–π —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ (–ø–æ–ª–µ major) –≤ Map<String, List>.

2)–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –∫—É—Ä—Å—É —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Set
–°–≥—Ä—É–ø–ø–∏—Ä—É–π —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ø–æ –∫—É—Ä—Å—É (year), –ø—Ä–∏ —ç—Ç–æ–º —Å–æ—Ö—Ä–∞–Ω–∏ –∏—Ö –≤ –≤–∏–¥–µ Set.

3)–ü–æ–¥—Å—á—ë—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
–ü–æ—Å—Ç—Ä–æ–π Map<String, Long>, –≥–¥–µ –∫–ª—é—á ‚Äî —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –Ω–∞ —ç—Ç–æ–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏.

4)–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
–ü–æ—Å—Ç—Ä–æ–π Map<String, Double>, –≥–¥–µ –∫–ª—é—á ‚Äî —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî —Å—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –Ω–∞ —ç—Ç–æ–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏.

5)–°–ø–∏—Å–æ–∫ –æ—Ü–µ–Ω–æ–∫ –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
–ü–æ—Å—Ç—Ä–æ–π Map<String, List>, –≥–¥–µ —Ö—Ä–∞–Ω—è—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ—Ü–µ–Ω–∫–∏ –ø–æ –∫–∞–∂–¥–æ–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏.

6)–°—É–º–º–∞—Ä–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É
–ò—Å–ø–æ–ª—å–∑—É–π IntSummaryStatistics, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å:
- –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç,
- –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç,
- —Å—Ä–µ–¥–Ω–∏–π –≤–æ–∑—Ä–∞—Å—Ç,
- –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤,
- —Å—É–º–º—É –≤—Å–µ—Ö –≤–æ–∑—Ä–∞—Å—Ç–æ–≤.

–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
–í—Å—è –ª–æ–≥–∏–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞ –≤ main().
–ù–µ –∑–∞–±—É–¥—å –¥–æ–±–∞–≤–∏—Ç—å toString() –≤ –∫–ª–∞—Å—Å Student –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞.
–ü–æ—Å—Ç–∞—Ä–∞–π—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Stream API –∏ Collectors –∫–∞–∫ –Ω–∞ —É—Ä–æ–∫–µ.

üîÑ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ (–ø–æ –∂–µ–ª–∞–Ω–∏—é):
–°–≥—Ä—É–ø–ø–∏—Ä—É–π —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ø–æ –∫—É—Ä—Å—É, –∏ –≤–Ω—É—Ç—Ä–∏ –∫–∞–∂–¥–æ–≥–æ –∫—É—Ä—Å–∞ —Å–≥—Ä—É–ø–ø–∏—Ä—É–π –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏:
 ‚Üí Map<Integer, Map<String, List>>
 */

import lesson_47.groupingBy.Employee;

import java.util.*;
import java.util.stream.Collectors;

public class Task4 {
    public static void main(String[] args) {

        // –∫—É—Ä—Å - c 1 –ø–æ 5-–π
        List<Student> students = new ArrayList<>(
                List.of(
                        new Student("Vlad", 18, "Informatics", 1, 4.5),
                        new Student("Oleg", 19, "Informatics", 2, 4.2),
                        new Student("Hanna", 19, "Informatics", 2, 5.0),

                        new Student("Alice", 19, "Biology", 2, 4.3),
                        new Student("Frank", 23, "Biology", 4, 4.7),
                        new Student("Helga", 23, "Biology", 5, 4.0),

                        new Student("Jack", 19, "Mathematics", 1, 4.8),
                        new Student("David", 22, "Mathematics", 4, 3.9),

                        new Student("Tom", 22, "Physics", 3, 4.1),
                        new Student("Leon", 21, "Physics", 2, 4.7)
                ));

        // 1. –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
        Map<String, List<Student>> groupByMajor = students.stream()
                .collect(Collectors.groupingBy(Student::getMajor));

        printMap(groupByMajor);

        //2. –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –∫—É—Ä—Å—É —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Set
        Map<Integer, Set<Student>> groupByYear = students.stream()
                .collect(Collectors.groupingBy(Student::getYear, Collectors.toSet()));

        printMap(groupByYear);
        System.out.println("–ù–∞ 1–º –∫—É—Ä—Å–µ: " + groupByYear.get(1));
        System.out.println("–ù–∞ 3–º –∫—É—Ä—Å–µ: " + groupByYear.get(3));
        System.out.println("============================================");


        // 3. –ü–æ–¥—Å—á—ë—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
        Map<String, Long> countInMajor = students.stream()
                .collect(Collectors.groupingBy(Student::getMajor, Collectors.counting()));

        printMap(countInMajor);


        // 4. –°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
        Map<String, Double> averageGrade = students.stream()
                .collect(Collectors.groupingBy(Student::getMajor,
                        Collectors.averagingDouble(Student::getGrade)));

        printMap(averageGrade);


        // 5. –°–ø–∏—Å–æ–∫ –æ—Ü–µ–Ω–æ–∫ –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
        Map<String, List<Double>> gradeLists = students.stream()
                .collect(Collectors.groupingBy(Student::getMajor,
                        Collectors.mapping(Student::getGrade, Collectors.toList())));

        printMap(gradeLists);

        // 6. –°—É–º–º–∞—Ä–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É
        IntSummaryStatistics statistics = students.stream()
                .collect(Collectors.summarizingInt(Student::getAge));

        System.out.println("–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç: " + statistics.getMin());
        System.out.println("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç: " + statistics.getMax());
        System.out.println("–°—Ä–µ–¥–Ω–∏–π –≤–æ–∑—Ä–∞—Å—Ç: " + statistics.getAverage());
        System.out.println("–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: " + statistics.getCount());
        System.out.println("–°—É–º–º–∞ –≤—Å–µ—Ö –≤–æ–∑—Ä–∞—Å—Ç–æ–≤  " + statistics.getSum());
        System.out.println("============================================");

        // 7. –°–≥—Ä—É–ø–ø–∏—Ä—É–π —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ø–æ –∫—É—Ä—Å—É, –∏ –≤–Ω—É—Ç—Ä–∏ –∫–∞–∂–¥–æ–≥–æ –∫—É—Ä—Å–∞ —Å–≥—Ä—É–ø–ø–∏—Ä—É–π –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
        Map<Integer, Map<String, List<Student>>> groupByYearThenByMajor = students.stream()
                .collect(Collectors.groupingBy(Student::getYear,
                        Collectors.groupingBy(Student::getMajor, Collectors.toList())));

        printMap(groupByYearThenByMajor);

    }

    private static <K, V> void printMap(Map<K, V> map) {
        map.forEach((k, v) -> System.out.println(k + ": " + v));
        System.out.println("=======================================");
    }
}
